service: carta-monitor
useDotenv: true

plugins:
    - serverless-plugin-typescript

provider:
    name: aws
    runtime: nodejs16.x
    region: us-east-1
    lambdaHashingVersion: 20201221
    timeout: 120
    environment:
        NONPERSONALIZED_CAMPAIGN_ID: ${env:NONPERSONALIZED_CAMPAIGN_ID}
        PERSONALIZED_CAMPAIGN_ID: ${env:PERSONALIZED_CAMPAIGN_ID}
        TRANSACTIONAL_CAMPAIGN_ID: ${env:TRANSACTIONAL_CAMPAIGN_ID}
        LIST_MANAGEMENT_SEND_ALERT: ${env:LIST_MANAGEMENT_SEND_ALERT}
        ALERT_CAMPAIGN_NAME: ${env:ALERT_CAMPAIGN_NAME}
        ALERT_EMAIL_LIST: ${env:ALERT_EMAIL_LIST}
        OPS_GENIE_ENV: ${env:OPS_GENIE_ENV}
        MONGODB_NAME: ${env:MONGODB_NAME}
        MONGODB_URI: ${env:MONGODB_URI}
        CARTA_UI_BASE_URL: ${env:CARTA_UI_BASE_URL}
        NONPERSONALIZED_SENDER_URL: ${env:NONPERSONALIZED_SENDER_URL}
        STAGE: ${opt:stage, "local"}
        IS_LOCAL: false
    iam:
        role:
            name: cartamonitor.ssm.read.${sls:stage}
            statements:
                - Effect: Allow
                  Action:
                      - ssm:GetParameter
                  Resource: arn:aws:ssm:us-east-1:493801680065:parameter/*
    # VPC set up using this tutorial:
    # https://www.letr.ai/blog/tech-221210
    vpc:
        securityGroupIds:
            - sg-0abacffd78082f584
        subnetIds:
            - subnet-0ea50fb1f64b90ee8
            - subnet-0516dd60ee939324a

functions:
    # send:
    #     handler: src/functions/send.send
    #     description: "Monitors and alerts for 'send' activities. Checks recent send events and triggers alerts for different types of sends."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    # sendScheduling:
    #     handler: src/functions/sendScheduling.sendScheduling
    #     description: "Manages scheduling of 'send' activities for various letter types. Creates and schedules letters, triggers alerts if scheduling fails."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    # sender:
    #     handler: src/functions/sender.sender
    #     description: "Healthcheck to ensure carta-sender invocation is successful."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    # testAlert:
    #     handler: src/functions/testAlert.testAlert
    #     description: "Tests the alert mechanism by sending an alert via the list management service."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    # metricsProcessing:
    #     handler: src/functions/metricsProcessing.checkMetricsProcessing
    #     description: "Checks volume of documents in the 'events' collection to ensure metrics processing load remains within acceptable limits."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    fileDownloadProcessing:
        handler: src/functions/fileDownloadProcessing.checkFileDownloadProcessing
        description: "Inspects 'file_download_details' collection for delayed file downloads and triggers alerts."
        environment:
            STAGE: ${opt:stage, "local"}
        events:
            - schedule: rate(10 minutes)

    # dynamicListProcessing:
    #     handler: src/functions/dynamicListProcessing.checkDynamicListProcessing
    #     description: "Checks for processing delays in dynamic lists and triggers alerts if lists fail to run as expected."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)

    # campaignSendAlerts:
    #     handler: src/functions/campaignSendAlerts.campaignSendAlerts
    #     description: "Monitors and updates the status of newsletter campaigns, triggers alerts for delayed or incomplete sends."
    #     environment:
    #         STAGE: ${opt:stage, "local"}
    #     events:
    #         - schedule: rate(10 minutes)
